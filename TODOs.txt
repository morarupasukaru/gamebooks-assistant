en cours:

#hide sections
    - possibilité de cacher les sections suivantes pour un "type" de paragraphe donnée,
    - type = tag
    - sections: carte, joueur, personnages, dés, lists (*)
    - choix disponible en éditant le paragraphe (=tag)

next todo:

#merge player & characters
    - afficher valeur initial courant / initial en mode non édition (tooltip)
    - afficher tous les attributs
    - permettre de mettre de ne pas mettre de valeurs pour les characters
    - afficher le joueur en premier dans la liste
    - ne pas permettre de supprime le joueur
    - permettre de changer le nom du joueur
    - afficher la liste des personnages en liste
    - en mode édition apparaissent des champs d'édition pour les caractéristiques & le noms

#integrate lone wolf
 - download images from lone wolf html
 - test import with all lone wolf books
 - integrate game rules paragraphs separatelly
 - feature: import player from another book (fix?)

#paragraph's illustrations
 - collapse on illustration
 - support more than one illustration?
 - to clarify:
        - lors de l'édition de la description du paragraphe, s'affiche un tableau permettant d'éditer, ajouter, effacer des illustrations
        - lors du clic sur nouvelle illustration, apparait une popup ou une ligne éditable, afin de saisir: un id (a utiliser dans la description comme placeholder), un text alternatif, une légende, un filepicker
        - les images ont un expand propre
        - si on a fermé l'expand d'une image, lorsque l'on jump dans le prochain paragraphe, l'expand des nouvelles images restent fermées
        - json du paragraphe
        {
              ...
              "paragraphNr": 2,
              illustrations: [
                {id: xx, alternativeText: '', legend: '', data:'base64}
              ]
        },
        - l'id d'une illustration est unique par paragraphe (check lors de la sauvegarde de l'edition)

    #editable paragraph with link
    - [[imageId]] => pour indiquer ou ajouter une illustration
    - tooltup d'aide avec explication des syntaxes
    - faire popup pour aide saisie (explique la syntaxe)
    - images paragraphes
    - ne pas changer la couleur d'un lien si celui-ci est non traceable

    #playername
    - permettre de pouvoir changer le nom du joueur
    - permettre de "tagger" le nom du joueur (chevalier, magicien, ...)
    - level of kai training : fait partie du nom du joueur
    - voir le tag, dans l'apercu des jeux

    #tag
    - insérer tag avec dropdrown, edition contenu dropdown
    - tag en image importé base64
        => image pour "tag" propre par livre

    #tag
    - dropdown contenant une liste d'entrée ayant une image (optionnelle) et un text (obligatoire)
    - dropdown dispo lors de l'edition du titre du paragraphe
    - dropdown dispo lors de l'edition du nom du joueur
    - tag s'affiche à coté du paragraphe / nom du joueur ainsi:  ... - image (texte)
    - test tag "game over"
    - tag s'affiche dans la carte, seulement l'image, le texte en tooltip, s'il n'y a pas d'image, un icon de bootstrap est pris par défaut
    - [v] [x] d'édition sans au niveau du titre du paragraphe, du nom du joueur
    - la dropdown a un bouton a coté permettant d'éditer la liste des tags
    - une page d'édition avec tableau comme item est utilisé pour gérer les tags
    - ajout tag-persistence-service
    - supporter export/import tags
    - tags dans sauvé au niveau de l'aventure: tags: [ {id: <unique>, alternativeText: '', data: 'base64'}, ...
    - tag trié par nom altenativeText

    #list à la place de tableau
    - note, items, dices, stats, enemy
    - icon/bouton edit à coté du titre de la section au lieu dans le header du tableau
    - [v] / [x] dans le titre de la section en mode edition
    - note joueurs = "type d'items"
    - note paragraphe = commentaire joueur unique par paragraphe (et pas une liste)

    #localstorage alternative
    - intégrer localforage/offline-file afin de sauver des aventures de plusieurs megabyites

    #decouple bootstrap css

    ( #angular-ui-router delete )
        http://viralpatel.net/blogs/angularjs-routing-and-views-tutorial-with-example/

    ( #angular-translate delete )

    # translate rewritten

    # $windows wrapper

    # simplify favicon

    # remove not needed glyphicon

    # replace table in libraries as list?

    # replace "selected" and other row button with a menu "..."

    # more small ui angular components

    # remove constants?

    # oop class for data / model?

    # touch-screen? (hover?)