en cours:

#lone wolf
- autre tags, contenu à intégrer?
- telecharger les illustrations et sauver en base64
- lancer import sur tous les livres single avec/sans images
- sauver les livres en versions sans règles et tester (lecture)
- supporter, importer premier livre lonesome wolf
- supporter les règles différentes (?) de combat différentes
- importation d'un caractère d'une partie d'une aventure précédente (id fixe?) - aussi utile pour sorcellerie et quete du graal
- gestion des "capacités" en tant que item?

#règles de jeu
- supporter le fait que des paragraphes aient du text au lieu de chiffre comme "no" de paragraphe
- la conversion en Number des no de paragaphes est fait que pour l'export (tri)
- flag "paragraphe non traceable sur la carte" qui est un checkbox clickable dans l'edition du paragraphe
=> un clic, declic implique une maj de la carte
- ignorer les "jumps" dans les paragraphes non jouable
- aide de jeu accessible depuis écran paragraphe & combat, "choix" customisable de manière général (point d'entrée de l'aide pour les combats diffère de celui de l'aide générale)
=> pas de liens d'aide pour les combats car cet écran sera supprimé

#combat as paragraphe
- l'écran de combat est un paragraphe éditable spéciale dont on ne voit pas toutes les sections (item, stats, etc.)
- écran de combat est un choix customisable par aventure

#illustration
- lors de l'édition de la description du paragraphe, s'affiche un tableau permettant d'éditer, ajouter, effacer des illustrations
- lors du clic sur nouvelle illustration, apparait une popup ou une ligne éditable, afin de saisir: un id (a utiliser dans la description comme placeholder), un text alternatif, une légende, un filepicker
- les images ont un expand propre
- si on a fermé l'expand d'une image, lorsque l'on jump dans le prochain paragraphe, l'expand des nouvelles images restent fermées
- json du paragraphe
{
      ...
      "paragraphNr": 2,
      illustrations: [
        {id: xx, alternativeText: '', legend: '', data:'base64}
      ]
},
- l'id d'une illustration est unique par paragraphe (check lors de la sauvegarde de l'edition)

#editable paragraphe & liens
- support des retours à la ligne (check si ca joue actuellement)
- §123§ => § délimiteur de choix de paragraphe (ou saut dans un paragraphe d'aide, p.ex. §combat§)
- [[imageId]] => pour indiquer ou ajouter une illustration
- tooltup d'aide avec explication des syntaxes
- affichage des choix deja pris dans une autre couleur (a moins que liens est non jouable)
- supprimer l'édition de choix via un tableau (conversion le-sorcier-de-la-montagne-de-feu.json?)
- permettre d'éditer les paragraphes (syntax?)
- faire popup pour aide saisie (explique la syntaxe)
- images paragraphes
- cacher des sections config par paragraphe, accessible en mode édition
=> permet de faire un paragraphe combat ou aide custom
- valeur par défaut de l'affichage des sections dans l'aventure?

#tag
- insérer tag avec dropdrown, edition contenu dropdown
- tag en image importé base64
    => image pour "tag" propre par livre

#items
- permet de spécifier une catégorie d'items > "Kai Discipline", "Items"
- permet de spécifier le titre de "l'item"
- supprimer quantité des items
- afficher la catégorie d'item dans un tableau à part avec expand à part
- pouvoir éditer la liste des items possibles dans l'édition de l'aventure

#notes as items
- les notes du joueur sont une type de items

#enemy as character
- généraliser la notion d'ennemi en tant que character
- flag friend/enemy
- section cachable d'un paragraphe (pas d'écran spécifique au combat)

#playername
- permettre de pouvoir changer le nom du joueur
- permettre de "tagger" le nom du joueur (chevalier, magicien, ...)
- level of kai training : fait partie du nom du joueur
- voir le tag, dans l'apercu des jeux

#tag
- dropdown contenant une liste d'entrée ayant une image (optionnelle) et un text (obligatoire)
- dropdown dispo lors de l'edition du titre du paragraphe
- dropdown dispo lors de l'edition du nom du joueur
- tag s'affiche à coté du paragraphe / nom du joueur ainsi:  ... - image (texte)
- tag s'affiche dans la carte, seulement l'image, le texte en tooltip, s'il n'y a pas d'image, un icon de bootstrap est pris par défaut
- [v] [x] d'édition sans au niveau du titre du paragraphe, du nom du joueur
- la dropdown a un bouton a coté permettant d'éditer la liste des tags
- une page d'édition avec tableau comme item est utilisé pour gérer les tags
- ajout tag-persistence-service
- supporter export/import tags
- tags dans sauvé au niveau de l'aventure: tags: [ {id: <unique>, alternativeText: '', data: 'base64'}, ...
- tag trié par nom altenativeText

#list à la place de tableau
- note, items, dices, stats, enemy
- icon/bouton edit à coté du titre de la section au lieu dans le header du tableau
- [v] / [x] dans le titre de la section en mode edition
- note joueurs = "type d'items"
- note paragraphe = commentaire joueur unique par paragraphe (et pas une liste)

#localstorage alternative
- intégrer localforage/offline-file afin de sauver des aventures de plusieurs megabyites

plus tard
    #angular js 2
    #skinnable
    - limiter dépendance à bootstrap?
    - intégrer projet oleg?
    - css?
    - interface skinable (enfant, fantasy, ...)