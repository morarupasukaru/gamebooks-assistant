en cours:

next todo:

feature

    # language in url
        - ../#/{language}/...
        - si ../#/ sans language alors on remplace url avec la langue stocké dans localstorage
        - si la langue n'est pas supporté, alors on remplace url avec ../#/en/...
        - si la langue de l'url est différente de celle de localstorage, alors celle-ci est remplacée
        - le changement de langue dans le footer modifie l'url actuelle (force un refresh)
        - service pour la gestion des langues dans url
        - service pour la gestion des langues dans localstorage
        - wrapper des 2 services

    # replace $translate with i18n
        - call by $ctrl.i18n('test') (fonction).
        - language set with method (inject language of the service that handle localstorage)
        - par defaut, la langue en paramètre est l'anglais
        - si un clef manque dans une langue <> anglais, un log dans la console est fait (si dispo)
        - gestion de paramètre à la String.format

            String.prototype.format = function (args) {
                var newStr = this;
                for (var key in args) { // <- TODO nb instead of key name let i = 0; i < args.length ...
                    newStr = newStr.replace('{' + key + '}', args[key]);
                }
                return newStr;
            }

    # single-page
        merge adventure & game list as

    # replace table of games, adventures, libraries with list that allow to add custom actions (btn '...' with a menu)

    # image "view" component

    # images "edit" component
        - (image-persistence-service if needed)

    # paragraph's illustrations
        - integrate image "view" & "edit" components
        - add collapse
        - multiple illustrations (mix of text and image)

    # paragraph's edition syntax as tooltip

    # paragraph tags
        - integrate image "view" & "edit" components
        - afficher le tag dans game-list

    # integrate http://getskeleton.com/
        - require refactoring "angular components to hide bootstrap css inside"

    # re-import game
        - from same adventure
        - from another adventure

    # import lone wolf games
        - download images from lone wolf html
        - test import with all lone wolf books
        - integrate game rules paragraphs separatelly

    # remove export-button

refactoring
    # oop class for data / model : angular factory
        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript
        https://medium.com/opinionated-angularjs/angular-model-objects-with-javascript-classes-2e6a067c73bc#.m560drzb6
        https://docs.angularjs.org/guide/providers

    # angular components to hide bootstrap css inside

    # remove not needed glyphicon (text + instead of + as image)

    # localstorage alternative (localforage?) if required to play lonewolf game

    # besoin de babel?

finitions
    # aria-label & title pour tous les elements (a faire une fois component bootstrap wrapper dans component angular)
        > il faut les deux aria-label et title (title ne suffit pas)

    # tooltip avec touch screen, mobile?